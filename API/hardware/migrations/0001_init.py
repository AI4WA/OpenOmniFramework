# Generated by Django 4.2.8 on 2024-07-07 12:00

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="DataAudio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hardware_device_mac_address",
                    models.CharField(
                        blank=True,
                        help_text="The mac address of the hardware device",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        help_text="the uid of the audio acquire session, can be treated as scenario id",
                        max_length=100,
                    ),
                ),
                (
                    "sequence_index",
                    models.IntegerField(help_text="The sequence index of the audio"),
                ),
                (
                    "audio_file",
                    models.CharField(help_text="The audio file", max_length=100),
                ),
                (
                    "start_time",
                    models.DateTimeField(help_text="The start time of the audio"),
                ),
                (
                    "end_time",
                    models.DateTimeField(help_text="The end time of the audio"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The created time of the audio"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The updated time of the audio"
                    ),
                ),
                (
                    "track_id",
                    models.CharField(
                        blank=True,
                        help_text="The track id of the multimodal conversation",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Audio",
                "verbose_name_plural": "Data Audios",
            },
        ),
        migrations.CreateModel(
            name="ResSpeech",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text2speech_file",
                    models.CharField(
                        blank=True,
                        help_text="The audio file",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "played",
                    models.BooleanField(
                        default=False, help_text="The audio file is played or not"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The created time of the audio"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The updated time of the audio"
                    ),
                ),
            ],
            options={
                "verbose_name": "Res Speech",
                "verbose_name_plural": "Res Speeches",
            },
        ),
        migrations.CreateModel(
            name="ResText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(help_text="The text of the audio")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The created time of the llm response",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The updated time of the llm response"
                    ),
                ),
            ],
            options={
                "verbose_name": "Res Text",
                "verbose_name_plural": "Res Texts",
            },
        ),
        migrations.CreateModel(
            name="Home",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="Blue Boat House",
                        help_text="The name of the home",
                        max_length=100,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        default="1 Kings Park Ave, Crawley WA 6009",
                        help_text="The address of the home",
                        max_length=100,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HardWareDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mac_address",
                    models.CharField(
                        help_text="The mac address of the hardware device",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the hardware device",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True,
                        help_text="The type of the hardware device",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="The description of the hardware device",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The created time of the hardware device",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The updated time of the hardware device",
                    ),
                ),
                (
                    "home",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hardware_devices",
                        to="hardware.home",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hardware Device",
                "verbose_name_plural": "Hardware Devices",
            },
        ),
        migrations.CreateModel(
            name="DataVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        help_text="the uid of the video acquire session, link back to client logs",
                        max_length=100,
                    ),
                ),
                (
                    "hardware_device_mac_address",
                    models.CharField(
                        blank=True,
                        help_text="The mac address of the hardware device",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "video_file",
                    models.CharField(help_text="The video file", max_length=100),
                ),
                (
                    "start_time",
                    models.DateTimeField(help_text="The start time of the video"),
                ),
                (
                    "end_time",
                    models.DateTimeField(help_text="The end time of the video"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The created time of the video"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The updated time of the video"
                    ),
                ),
                (
                    "home",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="video",
                        to="hardware.home",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Video",
                "verbose_name_plural": "Data Videos",
            },
        ),
        migrations.CreateModel(
            name="DataText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(help_text="The text of the audio")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The created time of the text"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The updated time of the text"
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        blank=True,
                        default="whisper",
                        help_text="The name of the model",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "audio",
                    models.ForeignKey(
                        help_text="The audio data",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="text",
                        to="hardware.dataaudio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Data Text",
                "verbose_name_plural": "Data Texts",
            },
        ),
        migrations.CreateModel(
            name="DataMultiModalConversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The created time of the multi-modal conversation",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The updated time of the multi-modal conversation",
                    ),
                ),
                (
                    "track_id",
                    models.CharField(
                        blank=True,
                        help_text="The track id of the multimodal conversation",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "annotations",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The annotations of the emotion detection",
                        null=True,
                    ),
                ),
                (
                    "multi_turns_annotations",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The annotations of the multi-turns",
                        null=True,
                    ),
                ),
                (
                    "audio",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="multi_modal_conversation",
                        to="hardware.dataaudio",
                    ),
                ),
                (
                    "res_speech",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="multi_modal_conversation",
                        to="hardware.resspeech",
                    ),
                ),
                (
                    "res_text",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="multi_modal_conversation",
                        to="hardware.restext",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "text",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="multi_modal_conversation",
                        to="hardware.datatext",
                    ),
                ),
                (
                    "video",
                    models.ManyToManyField(
                        blank=True,
                        related_name="multi_modal_conversation",
                        to="hardware.datavideo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
            },
        ),
        migrations.AddField(
            model_name="dataaudio",
            name="home",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="audio",
                to="hardware.home",
            ),
        ),
        migrations.CreateModel(
            name="ContextEmotionDetection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "result",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The emotion result of the text",
                        null=True,
                    ),
                ),
                (
                    "logs",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The logs of the emotion detection",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The created time of the emotion detection",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The updated time of the emotion detection",
                    ),
                ),
                (
                    "annotations",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The annotations of the emotion detection",
                        null=True,
                    ),
                ),
                (
                    "multi_modal_conversation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emotion_detection",
                        to="hardware.datamultimodalconversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Context Emotion",
                "verbose_name_plural": "Context Emotions",
            },
        ),
    ]
