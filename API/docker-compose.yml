services:
  db:
    image: postgres:13
    container_name: DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: yourdbname
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: API
    command: /usr/src/app/entrypoint.sh
    volumes:
      - .:/usr/src/app
      - .aws:/root/.aws
      - ../Client/Listener/data:/usr/src/client/Listener/data
      - ../AI/data/tts:/usr/src/client/Responder/data
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=yourdbname
      - DB_USER=youruser
      - DB_PASS=yourpassword
      - DB_SERVICE=DB
      - DB_PORT=5432
      - STORAGE_SOLUTION=${STORAGE_SOLUTION}
    depends_on:
      - db

volumes:
  postgres_data:
  whisper_cache:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins: