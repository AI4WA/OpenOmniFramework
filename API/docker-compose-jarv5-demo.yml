version: '3.8'

services:
  db:
    image: postgres:13
    container_name: pgdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: yourdbname
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    command: /usr/src/app/entrypoint.sh
    volumes:
      - .:/usr/src/app
      - .aws:/root/.aws
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=yourdbname
      - DB_USER=youruser
      - DB_PASS=yourpassword
      - DB_SERVICE=pgdb
      - DB_PORT=5432
    depends_on:
      - db

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    command: /usr/src/app/entrypoint_worker.sh
    volumes:
      - .:/usr/src/app
      - ../Client/Listener/data:/usr/src/Client/Listener/data
      - ../Client/Responder/data:/usr/src/Client/Responder/data
      - whisper_cache:/root/.cache
      - .aws:/root/.aws
    environment:
      - DB_NAME=yourdbname
      - DB_USER=youruser
      - DB_PASS=yourpassword
      - DB_SERVICE=pgdb
      - DB_PORT=5432
      - LLM_MODEL_NAME=llama2-7b-chat
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db

  emoji:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: emoji
    restart: always
    command: /usr/src/app/entrypoint_emoji.sh
    volumes:
      - .:/usr/src/app
      - ../Client/Listener/data:/usr/src/Client/Listener/data
      - ../Client/Responder/data:/usr/src/Client/Responder/data
      - whisper_cache:/root/.cache
      - .aws:/root/.aws
    environment:
      - DB_NAME=yourdbname
      - DB_USER=youruser
      - DB_PASS=yourpassword
      - DB_SERVICE=pgdb
      - DB_PORT=5432
      - LLM_MODEL_NAME=llama2-7b-chat
      - DEEPFACE_HOME=./ml/ml_models/model_data/deepface
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db

  hasura:
    image: hasura/graphql-engine:v2.38.0.cli-migrations-v3
    container_name: hasura
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./hasura/:/Javr5/
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://youruser:yourpassword@pgdb:5432/yourdbname
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: yn
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "django-insecure-yk8_z-l5)!2p2ii*^)i&4z)#j94d#f3by&j1*g*ru=)q7m#jw6"}' # Replace with environment variable JWT secret
    depends_on:
      - db


volumes:
  postgres_data:
  whisper_cache:
